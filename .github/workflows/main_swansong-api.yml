# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - swansong-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3      
      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'
          include-prerelease: true

      - name: Build
        run: dotnet build SwanSong.Api/SwanSong.Api.csproj --configuration Release 

      - name: Unit Tests
        run: dotnet test SwanSong.xUnit.Test/SwanSong.xUnit.Test.csproj --logger "console;verbosity=detailed"

      - name: Nstat
        run: netstat -tulpn

      # - uses: matt-ball/newman-action@master
      #   with:
      #     apiKey: ${{ secrets.POSTMAN_API_KEY }}
      #     collection: 4654363-93b176ce-c2bc-43e1-9735-ea3c5706a1e3
      #     environment: 4654363-af478bb0-dd2a-416c-a4a8-bc748a664349

      # - name: Install Postman CLI
      #   run: |
      #     curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      # - name: Login to Postman CLI
      #   run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      # - name: Run API tests
      #   run: |
      #     postman collection run "4654363-93b176ce-c2bc-43e1-9735-ea3c5706a1e3" -e "4654363-af478bb0-dd2a-416c-a4a8-bc748a664349"

        
      # - name: Install newman utility
      #   run: npm install -g newman
        
      # - name: Integration Tests
      #   run: | 
      #     npm run start:dev &
      #     sleep 30 |        
      #     netstat -tulpn           
      #     newman run "SwanSong.postman_collection.json" --env-var "baseUrl=https://swansong-api.azurewebsites.net/" --env-var "token=" --env-var "albumId=" --env-var "albumSongId=" --env-var "songId=" --env-var "artistId=" --env-var "memberId=" 
        
      - name: Publish
        run: dotnet publish SwanSong.Api/SwanSong.Api.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  # automated-api-tests:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Postman CLI
  #       run: |
  #         powershell.exe -NoProfile -InputFormat None -ExecutionPolicy AllSigned -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://dl-cli.pstmn.io/install/win64.ps1'))"
  #     - name: Login to Postman CLI
  #       run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
  #     - name: Run API tests

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'swansong-api'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AA426D0DB2E84F4DB0CEBDAA0A5078EA }}
          package: .

  automated-api-tests:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: matt-ball/newman-action@master
        with:
          apiKey: ${{ secrets.POSTMAN_API_KEY }}
          collection: 4654363-93b176ce-c2bc-43e1-9735-ea3c5706a1e3
          environment: 4654363-0ce9dc60-ef0b-42f0-9fc2-df89586c97ea
          globals: ./PostmanCollections/SwanSong.postman_globals
      # - name: Install Postman CLI
      #   run: |
      #     curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      # - name: Login to Postman CLI
      #   run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      # - name: Run API tests
      #   run: |
      #     postman collection run "4654363-93b176ce-c2bc-43e1-9735-ea3c5706a1e3" -e "4654363-0ce9dc60-ef0b-42f0-9fc2-df89586c97ea"

